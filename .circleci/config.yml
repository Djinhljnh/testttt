version: 2.1

executors:
  maven-executor:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo

jobs:
  build:
    executor: maven-executor
    environment:
      MYSQL_ROOT_LOGIN: << parameters.mysql_root_login >>
    steps:
      - checkout

      - run:
          name: Set up Maven and Java
          command: |
            mvn --version
            java -version

      - run:
          name: Build with Maven
          command: |
            mvn clean package -Dmaven.test.failure.ignore=true

  package-and-push-image:
    executor: maven-executor
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Build and Push Docker Image
          command: |
            docker build -t khaliddinh/springboot .
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push khaliddinh/springboot

  deploy-mysql-dev:
    executor: maven-executor
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Deploy MySQL to DEV
          command: |
            docker pull mysql:8.0
            docker network create dev || echo "this network exists"
            docker container stop khalid-mysql || echo "this container does not exist"
            echo y | docker container prune
            docker volume rm khalid-mysql-data || echo "no volume"
            docker run --name khalid-mysql --rm --network dev -v khalid-mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_LOGIN -e MYSQL_DATABASE=db_example -d mysql:8.0
            sleep 20
            docker exec -i khalid-mysql mysql --user=root --password=$MYSQL_ROOT_LOGIN < script

  deploy-springboot-dev:
    executor: maven-executor
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Deploy Spring Boot to DEV
          command: |
            docker pull khaliddinh/springboot
            docker container stop khalid-springboot || echo "this container does not exist"
            docker network create dev || echo "this network exists"
            echo y | docker container prune
            docker container run -d --rm --name khalid-springboot -p 8081:8080 --network dev khaliddinh/springboot

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - package-and-push-image:
          requires:
            - build
      - deploy-mysql-dev:
          requires:
            - package-and-push-image
      - deploy-springboot-dev:
          requires:
            - deploy-mysql-dev

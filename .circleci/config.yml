version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk  # Java + Maven environment
      - image: circleci/mysql:8.0        # MySQL service
    environment:
      MYSQL_ROOT_PASSWORD: <<parameters.mysql_password>>
    steps:
      - checkout
      - setup_remote_docker  # For Docker commands inside CircleCI

      - run:
          name: Install Maven & Java Versions
          command: |
            mvn --version
            java -version

      - run:
          name: Build with Maven
          command: mvn clean package -Dmaven.test.failure.ignore=true

  push_image:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Docker Login and Build
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t khaliddinh/springboot .
            docker push khaliddinh/springboot

  deploy_mysql:
    docker:
      - image: circleci/mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: <<parameters.mysql_password>>
    steps:
      - setup_remote_docker

      - run:
          name: Deploy MySQL to DEV
          command: |
            docker network create dev || echo "Network exists"
            docker container stop khalid-mysql || echo "Container does not exist"
            echo y | docker container prune
            docker volume rm khalid-mysql-data || echo "No volume"

            docker run --name khalid-mysql --rm --network dev \
              -v khalid-mysql-data:/var/lib/mysql \
              -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD \
              -e MYSQL_DATABASE=db_example \
              -d mysql:8.0
            sleep 20
            docker exec -i khalid-mysql mysql --user=root --password=$MYSQL_ROOT_PASSWORD < script

  deploy_springboot:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - setup_remote_docker

      - run:
          name: Deploy Spring Boot to DEV
          command: |
            docker container stop khalid-springboot || echo "Container does not exist"
            docker network create dev || echo "Network exists"
            echo y | docker container prune

            docker container run -d --rm --name khalid-springboot \
              -p 8081:8080 --network dev khaliddinh/springboot

  cleanup:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - run:
          name: Cleanup Workspace
          command: |
            echo y | docker container prune
            docker network rm dev || echo "Network not found"
      - clean:  # Clean workspace
          path: .

workflows:
  version: 2
  pipeline-workflow:
    parameters:
      mysql_password:
        type: string
        default: "your_mysql_root_password"

    jobs:
      - build
      - push_image:
          requires:
            - build
      - deploy_mysql:
          requires:
            - push_image
      - deploy_springboot:
          requires:
            - deploy_mysql
      - cleanup:
          requires:
            - deploy_springboot
